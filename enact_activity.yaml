blueprint:
  name: PiHub - Enact Activity (room-agnostic)
  description: |
    - Triggers scripts whenever the roomâ€™s activity changes - powered by the Resolve automation
    - After the script wraps up, it updates the `last_run` input_select
  domain: automation
  input:
    activity_input_select:
      name: Room Activity
      selector:
        entity:
          domain: input_select
    last_run_input_select:
      name: Room Last-run Activity
      selector:
        entity:
          domain: input_select
    watch_script:
      name: Watch Script
      selector:
        entity:
          domain: script
    listen_script:
      name: Listen Script
      selector:
        entity:
          domain: script
    power_off_script:
      name: Power Off Script
      selector:
        entity:
          domain: script

mode: single

trigger:
  - platform: state
    entity_id: !input activity_input_select

variables:
  activity_select: !input activity_input_select
  last_run_select: !input last_run_input_select
  resolved: "{{ states(activity_select) }}"

action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ resolved == 'watch' }}"
        sequence:
          - alias: Run watch script
            service: !input watch_script
      - conditions:
          - condition: template
            value_template: "{{ resolved == 'listen' }}"
        sequence:
          - alias: Run listen script
            service: !input listen_script
      - conditions:
          - condition: template
            value_template: "{{ resolved == 'power_off' }}"
        sequence:
          - alias: Run power off script
            service: !input power_off_script

  - alias: Update last_run
    service: input_select.select_option
    target:
      entity_id: !input last_run_input_select
    data:
      option: "{{ resolved }}"

  - alias: Log enact
    service: logbook.log
    data:
      name: PiHub Enactor
      message: "Ran script for '{{ resolved }}'"
