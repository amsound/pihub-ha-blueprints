blueprint:
  name: Watch (via MQTT Activity)
  description: |
    When MQTT receives 'watch' on a specific topic, this automation:
    - updates activity
    - turns on the TV (via MQTT) if it's off
    - switches speakers to Optical
    - resets Music Assistant
    - updates last-run activity
  domain: automation

  input:
    mqtt_topic_rx:
      name: MQTT Trigger Topic e.g. pihub/<room>/activity
      description: ""
      selector:
        text: {}

    activity_select:
      name: Activity Input Select
      description: ""
      selector:
        entity:
          domain: input_select

    tv_sensor:
      name: TV Sensor
      description: ""
      selector:
        entity:
          domain: binary_sensor
          
    mqtt_topic_tx:
      name: MQTT Command Topic e.g. pihub/<room>/cmd
      description: ""
      selector:
        text: {}

    speakers:
      name: Speakers
      description: ""
      selector:
        entity:
          domain: media_player
        
    music_assistant_reset_script:
      name: Music Assistant Reset Script
      description: ""
      selector:
        entity:
          domain: script

    last_run_select:
      name: Last Run Activity
      description: ""
      selector:
        entity:
          domain: input_select

trigger:
  - platform: mqtt
    topic: !input mqtt_topic_rx
    payload: "watch"

condition: []

actions:
  - service: input_select.select_option
    target:
      entity_id: !input activity_select
    data:
      option: watch

  - parallel:
      - choose:
          - conditions:
              - condition: state
                entity_id: !input tv_sensor
                state: "off"
            sequence:
              - service: mqtt.publish
                data:
                  topic: !input mqtt_topic_tx
                  payload: macro:atv-on
                  qos: "1"
                  retain: false
      - sequence:
          - service: media_player.select_source
            target:
              entity_id: !input speakers
            data:
              source: Opt

          - action: !input music_assistant_reset_script

  - service: input_select.select_option
    target:
      entity_id: !input last_run_select
    data:
      option: watch

mode: single
