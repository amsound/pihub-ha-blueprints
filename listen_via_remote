blueprint:
  name: Listen (via MQTT Activity)
  description: |
    When MQTT receives 'listen' on a specific topic, this automation:
    - updates the activity
    - turns off the TV (if it's on)
    - plays a radio station & switches speakers to wifi
    - updates last run activity

  domain: automation

  input:
    mqtt_topic_rx:
      name: MQTT Trigger Topic e.g. pihub/kitchen/activity
      description: ""
      selector:
        text: {}

    room_activity:
      name: Activity Input Select
      description: ""
      selector:
        entity:
          domain: input_select

    radio_station:
      name: Radio Station e.g. BBC Radio 1
      description: ""
      selector:
        text:

    radio_tuner_script:
      name: Music Assistant Radio Tuner Script
      description: ""
      selector:
        entity:
          domain: script

    speakers:
      name: Speakers
      description: ""
      selector:
        entity:
          domain: media_player

    speaker_wifi_sensor:
      name: Speakers Wi-Fi Sensor
      description: ""
      selector:
        entity:
          domain: binary_sensor

    tv_sensor:
      name: TV Sensor
      description: ""
      selector:
        entity:
          domain: binary_sensor

    mqtt_topic_tx:
      name: MQTT Command Topic e.g. pihub/kitchen/cmd
      description: ""
      selector:
        text: {}

    last_run_activity:
      name: Last Run Activity Input Select
      description: ""
      selector:
        entity:
          domain: input_select

triggers:
  - platform: mqtt
    topic: !input mqtt_topic_rx
    payload: "listen"

condition: []

actions:
  - action: input_select.select_option
    target:
      entity_id: !input room_activity
    data:
      option: "listen"

  - parallel:
      - choose:
          - conditions:
              - condition: state
                entity_id: !input tv_sensor
                state: "on"
            sequence:
              - action: mqtt.publish
                data:
                  topic: !input mqtt_topic_tx
                  payload: macro:atv-off
                  qos: "1"
                  retain: false

      - choose:
          - conditions:
              - condition: state
                entity_id: !input speaker_wifi_sensor
                state: "off"
            sequence:
              - action: media_player.select_source
                target:
                  entity_id: !input speakers
                data:
                  source: Wifi

      - action: !input radio_tuner_script
        data:
          station: !input radio_station

  - action: input_select.select_option
    target:
      entity_id: !input last_run_activity
    data:
      option: "listen"

mode: single
