blueprint:
  name: Listen (via MQTT Activity)
  description: >
    When an MQTT message with payload 'listen' is received on a given topic,
    this automation starts a Music Assistant radio station. If the TV is on,
    it sends an MQTT command to turn it off.

  domain: automation

  input:
    mqtt_topic_rx:
      name: MQTT Topic (Trigger)
      description: Full MQTT topic to listen on (e.g. pihub/kitchen/activity)
      selector:
        text:

    radio_station:
      name: Radio Station
      description: Name of the station to play (e.g. BBC Radio 1)
      selector:
        text:

    radio_tuner_script:
      name: Music Assistant Radio Tuner Script
      description: The script to call with the radio station
      selector:
        entity:
          domain: script

    tv_sensor:
      name: TV Sensor
      description: Binary sensor that detects whether the TV is on
      selector:
        entity:
          domain: binary_sensor

    mqtt_topic_tx:
      name: MQTT Topic (Command)
      description: Topic to send the TV-off command to (e.g. pihub/kitchen/cmd)
      selector:
        text:

triggers:
  - platform: mqtt
    topic: !input mqtt_topic_rx
    payload: "listen"

condition: []

actions:
  - action: !input radio_tuner_script
    data:
      station: !input radio_station

  - choose:
      - conditions:
          - condition: state
            entity_id: !input tv_sensor
            state: "on"
        sequence:
          - service: mqtt.publish
            data:
              topic: !input mqtt_topic_tx
              payload: macro:atv-off
              qos: 1
              retain: false

mode: single
