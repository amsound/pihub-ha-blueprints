blueprint:
  name: Default Volume - Room Independent
  description: >
    Adjusts speaker volume automatically based on input source:
    - If Optical input becomes active, sets to watch volume
    - If WiFi input becomes active and Music Assistant is playing, sets to listen volume
  domain: automation
  input:
    speaker_opt_sensor:
      name: Speaker Optical Input Sensor
      description: ""
      selector:
        entity:
          domain: binary_sensor
    speaker_wifi_sensor:
      name: Speaker WiFi Input Sensor
      description: ""
      selector:
        entity:
          domain: binary_sensor
    speaker_media_player:
      name: Speaker Media Player
      description: ""
      selector:
        entity:
          domain: media_player
    music_assistant_entity:
      name: Music Assistant Media Player
      description: ""
      selector:
        entity:
          domain: media_player
    listen_volume_level:
      name: Listen Volume Level
      description: ""
      selector:
        entity:
          domain: input_number
    watch_volume_level:
      name: Watch Volume Level
      description: ""
      selector:
        entity:
          domain: input_number

trigger:
  - platform: state
    id: "opt_input"
    entity_id: !input speaker_opt_sensor
    to: "on"
  - platform: state
    id: "wifi_input"
    entity_id: !input speaker_wifi_sensor
    to: "on"

mode: single

variables:
  speaker: !input speaker_media_player
  listen_entity: !input listen_volume_level
  watch_entity: !input watch_volume_level
  listen_volume: "{{ states(listen_entity) | float }}"
  watch_volume: "{{ states(watch_entity) | float }}"

action:
  - choose:
      - conditions:
          - condition: trigger
            triggers: ["opt_input"]
        sequence:
          - delay: "1"
          - condition: template
            value_template: >
              {{ state_attr(speaker, 'volume_level') | float != watch_volume }}
          - action: media_player.volume_set
            target:
              entity_id: "{{ speaker }}"
            data:
              volume_level: "{{ watch_volume }}"

      - conditions:
          - condition: trigger
            triggers: ["wifi_input"]
        sequence:
          - delay: "1"
          - wait_for_trigger:
              - platform: state
                entity_id: !input music_assistant_entity
                to: "playing"
            timeout: "10"
            continue_on_timeout: false
          - condition: template
            value_template: >
              {{ state_attr(speaker, 'volume_level') | float != listen_volume }}
          - action: media_player.volume_set
            target:
              entity_id: "{{ speaker }}"
            data:
              volume_level: "{{ listen_volume }}"
