blueprint:
  name: Listen Script - Room Independent
  description: |
    - Turns off TV
    - Switches speaker to Wifi input, plus launches radio station via Music Assistant.
     Only acts when necessary (idempotent)
     
  domain: script
  
  input:
    room:
      name: Room Name (for MQTT topic)
      description: ""
      selector:
        text: {}
    tv_power_sensor:
      name: Room TV Sensor
      description: ""
      selector:
        entity:
          domain: binary_sensor
    speaker_media_player:
      name: Speaker
      description: ""
      selector:
        entity:
          domain: media_player
    speaker_wifi_sensor:
      name: Speaker on Wifi Sensor
      description: ""
      selector:
        entity:
          domain: binary_sensor
    music_assistant_radio_tuner_script:
      name: Music Assistant Radio Tuner Script
      description: ""
      selector:
        entity:
          domain: script
    radio_station:
      name: Radio Station to Play
      description: ""
      default: "Classic FM"
      selector:
        text: {}
    payload_off:
      name: Apple TV Power Off Payload
      description: ""
      default: "macro:atv-off"
      selector:
        text: {}

variables:
  room: !input room
  cmd_topic: >
    {{ 'pihub/' ~ room ~ '/cmd' }}

mode: single

sequence:
  - alias: Parallel Listen Setup
    parallel:
      - alias: Turn Off TV if On
        sequence:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: !input tv_power_sensor
                    state: "on"
                sequence:
                  - service: mqtt.publish
                    data:
                      topic: "{{ cmd_topic }}"
                      payload: !input payload_off
                      qos: "1"
                      retain: false

      - alias: Start Radio if Not on WiFi Input
        sequence:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: !input speaker_wifi_sensor
                    state: "off"
                sequence:
                  # Blocking call to your tuner script, passing the station as data
                  - service: !input music_assistant_radio_tuner_script
                    data:
                      station: !input radio_station

                  - service: media_player.select_source
                    target:
                      entity_id: !input speaker_media_player
                    data:
                      source: "Wifi"

                  - alias: Poll Speaker Until WiFi Sensor is Active
                    repeat:
                      sequence:
                        - service: homeassistant.update_entity
                          target:
                            entity_id: !input speaker_media_player
                        - delay:
                            milliseconds: 500
                      until:
                        - condition: state
                          entity_id: !input speaker_wifi_sensor
                          state: "on"
