blueprint:
  name: Power Off - Room Independent
  description: |
    - Turns off TV
    - Turns off Speakers and resets Music Assistant.
    Only acts when necessary (idempotent)
  domain: script
  input:
    room:
      name: Room Name (for MQTT topic)
      description: ""
      selector:
        text: {}
    tv_power_sensor:
      name: Room TV Sensor
      description: ""
      selector:
        entity:
          domain: binary_sensor
    speaker_media_player:
      name: Speakers
      description: ""
      selector:
        entity:
          domain: media_player
    reset_music_assistant_script:
      name: Music Assistant Reset Script
      description: ""
      selector:
        entity:
          domain: script
    payload_off:
      name: Apple TV Power Off Payload
      description: ""
      default: "macro:atv-off"
      selector:
        text: {}

variables:
  room: !input room
  cmd_topic: >
    {{ 'pihub/' ~ room ~ '/cmd' }}

mode: single

sequence:
  - alias: Parallel Watch Off Actions
    parallel:
      - alias: Turn Off TV if On
        sequence:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: !input tv_power_sensor
                    state: "on"
                sequence:
                  - service: mqtt.publish
                    data:
                      topic: "{{ cmd_topic }}"
                      payload: !input payload_off
                      qos: "1"
                      retain: false

      - alias: Turn Off Speakers and Reset Music Assistant
        sequence:
          - service: media_player.turn_off
            target:
              entity_id: !input speaker_media_player
          - service: !input reset_music_assistant_script
